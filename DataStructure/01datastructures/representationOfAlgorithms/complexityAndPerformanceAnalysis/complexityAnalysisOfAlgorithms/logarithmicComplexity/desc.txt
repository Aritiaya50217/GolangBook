Logarithmic complexity (O(log n)) 
        ความซับซ้อนของอัลกอริธึมที่เวลาการทำงานเพิ่มขึ้นตามลำดับที่น้อยลงเมื่อขนาดของข้อมูลเพิ่มขึ้น (โดยสัมพันธ์กับลอการิธึมของขนาดข้อมูล) กล่าวคือ 
    เวลาในการประมวลผลจะเพิ่มขึ้นช้าเมื่อขนาดข้อมูลเพิ่มขึ้น ตัวอย่างที่ใช้ได้บ่อยคือการค้นหาข้อมูลในโครงสร้างข้อมูลที่เป็นแบบแบ่งครึ่ง เช่น Binary Search (การค้นหาผ่านการแบ่งครึ่ง)

    ตัวอย่างอัลกอริธึมที่มี Logarithmic Complexity
        Binary Search: การค้นหาค่าหนึ่งในอาร์เรย์ที่เรียงลำดับแล้ว โดยการแบ่งครึ่งข้อมูลในการค้นหาในแต่ละขั้นตอน

    สรุป 
        - Logarithmic complexity (O(log n)) เป็นอัลกอริธึมที่ทำงานได้เร็วมากเมื่อขนาดข้อมูลเพิ่มขึ้น เพราะเวลาการทำงานเพิ่มขึ้นในอัตราที่ช้ามาก
        - เหมาะสำหรับอัลกอริธึมที่สามารถลดขนาดปัญหาลงในแต่ละขั้นตอน เช่น Binary Search หรือโครงสร้างข้อมูลบางประเภท เช่น Binary Search Tree (BST), Heaps, AVL Trees, หรือ Red-Black Trees    