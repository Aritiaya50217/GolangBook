Healing Unhealthy Goroutines

        การตรวจจับและจัดการ Goroutines ที่ทำงานผิดปกติ หรือหยุดทำงานเนื่องจากข้อผิดพลาด เช่น Deadlocks, Panics, หรือการทำงานที่ล่าช้ากว่าปกติ (e.g., Goroutines ที่ค้างอยู่)
    เมื่อระบบที่ใช้ Goroutines มีปัญหา อาจทำให้เกิดการใช้ทรัพยากรที่ไม่เหมาะสมและทำให้แอปพลิเคชันหยุดทำงาน การ "healing" หมายถึงการออกแบบกลไกเพื่อป้องกันหรือฟื้นฟู Goroutines เหล่านี้ให้ทำงานปกติ

    แนวทางการใช้ Healing Goroutines
        1. ใช้ recover เพื่อจัดการ Panic: ป้องกัน Goroutines จากการหยุดทำงานแบบไม่คาดคิด
        2. ควบคุม Timeout ด้วย Context: หยุด Goroutines ที่ใช้เวลานานเกินไป
        3. สร้างกลไกการ Restart: ฟื้นฟู Goroutines ที่ล้มเหลวหรือหยุดทำงาน
        4. ตรวจสอบ Health ของ Goroutines: ใช้สัญญาณหรือกลไก Heartbeat เพื่อตรวจสอบสถานะ
        5. ออกแบบ Goroutines อย่างระมัดระวัง: หลีกเลี่ยง Deadlocks และทรัพยากรที่รั่วไหล (Resource Leaks)
        6.เพิ่มการ Debugging และ Monitoring: ช่วยระบุปัญหาได้รวดเร็ว