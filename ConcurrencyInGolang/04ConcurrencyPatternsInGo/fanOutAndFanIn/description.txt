Fan-Out และ Fan-In 
    เป็นแนวคิดใน Golang ที่เกี่ยวข้องกับการทำงานแบบ Concurrent โดยใช้ Goroutines และ Channels เพื่อเพิ่มประสิทธิภาพในการประมวลผลข้อมูลหรือรวมผลลัพธ์จากหลายแหล่งเข้าด้วยกัน

    1. Fan-Out 
        การกระจายงานจาก Channel หนึ่งไปยังหลาย Goroutines เพื่อประมวลผลพร้อมกัน โดยแต่ละ Goroutine จะทำงานแบบอิสระ 
        ข้อดีของ Fan-Out 
            คือช่วยเพิ่มความเร็วในการประมวลผลโดยใช้ประโยชน์จากหลาย Core ใน CPU

    2. Fan-In
        การรวมผลลัพธ์จากหลาย Goroutines หรือ Channels เข้าสู่ Channel เดียวเพื่อรวบรวมข้อมูลหรือผลลัพธ์ที่ได้ ข้อดีของ Fan-In คือช่วยจัดการการรวมข้อมูลจากหลายแหล่งได้อย่างมีประสิทธิภาพ

    3. รวม Fan-Out และ Fan-In
       การผสมผสาน Fan-Out และ Fan-In ช่วยสร้างระบบที่สามารถกระจายงานและรวบรวมผลลัพธ์ได้พร้อมกัน

    ข้อดีของ Fan-Out และ Fan-In

        1. Fan-Out:
            - เพิ่มประสิทธิภาพโดยการกระจายงานไปยัง Goroutines หลายตัว
            - ใช้ประโยชน์จาก CPU หลาย Core

        2. Fan-In:
            - จัดการการรวมข้อมูลขนานได้ง่าย
            - ลดความซับซ้อนในการรวบรวมผลลัพธ์

    สรุป
        - Fan-Out ช่วยกระจายงานให้ทำงานพร้อมกันแบบขนาน
        - Fan-In ช่วยรวบรวมผลลัพธ์จากหลาย Goroutines
        - การผสมทั้งสองสามารถสร้างระบบที่มีประสิทธิภาพและรองรับการประมวลผลข้อมูลขนาดใหญ่ได้อย่างเหมาะสม