Facade Pattern
    "ซ่อนความซับซ้อนของระบบไว้เบื้องหลังอินเตอร์เฟสที่ใช้งานง่าย" 
        เมื่อเรามีระบบที่ประกอบไปด้วยหลาย ๆ ส่วนที่ต้องทำงานร่วมกัน (เช่น ระบบเสียง, ระบบภาพ, ระบบไฟ) การเรียกใช้แต่ละระบบโดยตรงอาจทำให้โค้ดของเราซับซ้อนมากเกินไป และยากต่อการดูแลในระยะยาว
    Facade Pattern จึงเข้ามาช่วย รวมการเรียกใช้งานระบบย่อยเหล่านั้นไว้ในจุดเดียว เพื่อให้ง่ายต่อการใช้งานและการจัดการ


สรุป
    1. Facade คือ รูปแบบที่ให้ interface ที่เรียบง่ายสำหรับ subsystem ที่ซับซ้อน
    2. ใช้เมื่อระบบมีหลาย component ย่อยที่ทำงานร่วมกัน
    3.  ประโยชน์ คือลดความซับซ้อน, เพิ่มความเข้าใจง่าย, ลดการ coupling